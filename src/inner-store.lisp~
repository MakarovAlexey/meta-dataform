(in-package meta-dataform)

(defclass private-store (weblocks-memory:memory-store)
  ((next-id :initform -1))
  (:default-initargs :root-objects nil))

(defun next-id (store)
  (incf (slot-value store 'next-id))) 

(defmethod open-store ((store-type (eql :private)) &rest args)
  (declare (ignore store-type args))
  (error "private-store является внутренним и непредназначен для исопльзования как *default-store*"))

(defmethod close-store ((store memory-store))
  (declare (ignore store))
  (error "private-store является внутренним и непредназначен для исопльзования как *default-store*"))

(defmethod persist-object ((store private-store) object &key)
  (push (cons (next-id store) object) (memory-store-root-objects store)))

(defmethod delete-persistent-object ((store memory-store) object)
  (

(defmethod delete-persistent-object-by-id ((store memory-store) class-name object-id)

(defmethod find-persistent-object-by-id ((store memory-store) class-name object-id)

(defmethod find-persistent-objects ((store memory-store) class-name
				    &key (filter nil) order-by range)

(defmethod count-persistent-objects ((store memory-store) class-name
				     &key &allow-other-keys)